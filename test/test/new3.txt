#include "stdafx.h"
#include "opencv2\opencv.hpp"
#include "opencv2/calib3d/calib3d.hpp"  
#include "opencv2/imgproc/imgproc.hpp"  
#include "opencv2/highgui/highgui.hpp"  
using namespace cv;
int main()
{
	cv::Mat img1, img2, g1, g2;
	cv::Mat disp, disp8;
	Mat & disp;
	img1 = cv::imread("scene11.ppm");
	img2 = cv::imread("scene12.ppm");

	cv::imshow("ImageLeft", img1);
	cv::imshow("ImageRight", img2);
	cv::imwrite("ImageLeft.png", img1);
	cv::imwrite("ImageRight.png", img2);

	//wait until keypress from user
	cv::waitKey(1000);
	cv::cvtColor(img1, g1, CV_BGR2GRAY);
	cv::cvtColor(img2, g2, CV_BGR2GRAY);
	Rect leftROI, rightROI;
	
	// for now trying basic preset, but can be specific
	//cv::StereoBM sbm(cv::StereoBM::BASIC_PRESET);
	cv::Ptr<cv::StereoBM> sbm = cv::StereoBM::create(16, 9);
	sbm->setPreFilterType(CV_STEREO_BM_XSOBEL);
	sbm->setPreFilterSize(9);i
	sbm->setPreFilterCap(31);
	sbm->setBlockSize(15);
	sbm->setMinDisparity(0);
	sbm->setNumDisparities(64);
	sbm->setTextureThreshold(10);
	sbm->setUniquenessRatio(5);
	sbm->setSpeckleWindowSize(100);
	sbm->setSpeckleRange(32);
	sbm->setROI1(leftROI);
	sbm->setROI2(rightROI);
	copyMakeBorder(img1, img1, 0, 0, 80, 0, IPL_BORDER_REPLICATE);  //防止黑边
	copyMakeBorder(img2, img2, 0, 0, 80, 0, IPL_BORDER_REPLICATE);
	printf("h!\n");
	//sbm->compute(img1, img2, disparity);
	//sbm->setROI1(leftROI);
	//sbm->setROI2(rightROI);
	/*StereoBM sbm;
	CvStereoBMState *BMState = cvCreateStereoBMState();*/
	//sbm.state->SADWindowSize = 9;
	//sbm.state->numberOfDisparities = 112;
	//sbm.state->preFilterSize = 5;
	//sbm.state->preFilterCap = 61;
	//sbm.state->minDisparity = -39;
	//sbm.state->textureThreshold = 507;
	//sbm.state->uniquenessRatio = 0;
	//sbm.state->speckleWindowSize = 0;
	//sbm.state->speckleRange = 8;
	//sbm.state->disp12MaxDiff = 1;
	sbm->compute(img1, img2, disp);
	printf("h!\n");
	disp = disp.colRange(80, img1.cols);
	printf("h!\n");
	disp.convertTo(disp, CV_32F, 1.0 / 16);
	//sbm(g1, g2, disp);
	printf("h1!\n");
	cv::normalize(disp, disp8, 0, 255, CV_MINMAX, CV_8U);
	printf("h2!\n");
	imshow("left", img1);
	imshow("right", img2);
	printf("h!\n");
	cv::imshow("disp", disp8);
	cv::imwrite("disparity.png", disp8);
	cv::waitKey(0);
}